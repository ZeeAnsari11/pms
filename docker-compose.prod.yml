version: '3.9'

services:
  postgres:
    container_name: postgres
    image: postgres:15.2-alpine
    restart: unless-stopped
    ports:
      - 5432:5432
    volumes:
      - postgres:/var/lib/postgresql/data/
    env_file:
      - ./postgres/.env.prod

  backend:
    container_name: backend
    image: backend:custom
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
    restart: unless-stopped
    expose:
      - 8000
    volumes:
      - static:/usr/src/app/static
      - media:/usr/src/app/media
    env_file:
      - ./backend/.env.prod
    command: gunicorn app.wsgi:application --bind 0.0.0.0:8000 -w 2
    depends_on:
      - postgres

  frontend:
    container_name: frontend
    image: frontend:custom
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
    restart: unless-stopped
    expose:
      - 3000
    env_file:
      - ./frontend/.env.prod
    command: serve -s /usr/src/app/build -l 3000
    depends_on:
      - backend

  nginx:
    container_name: nginx
    image: nginx:custom
    build:
      context: ./nginx
      dockerfile: Dockerfile.prod
    restart: unless-stopped
    ports:
      - 80:80
    volumes:
      - static:/usr/src/app/static
      - media:/usr/src/app/media
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - /etc/letsencrypt/:/etc/letsencrypt/
    depends_on:
      - frontend
      - certbot

  certbot:
    container_name: certbot
    image: certbot/certbot
    volumes:
      - /etc/letsencrypt/:/etc/letsencrypt/
    command: certonly --webroot --webroot-path=/var/www/projex --email usman.ilamdin@phpstudios.com --agree-tos --no-eff-email -d projex.phpstudios.com
    depends_on:
      - nginx

volumes:
  postgres:
    external: true
  static:
    external: false
  media:
    external: true
  ./nginx/nginx.conf:
    external: true
  /etc/letsencrypt/:
    external: true
